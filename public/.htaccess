# .htaccess para Apache 2.4+
# Requiere AllowOverride All en el VirtualHost

RewriteEngine On

### 1) Canonicalización (host/HTTPS)
# Forzar HTTPS (descomenta en producción)
# RewriteCond %{HTTPS} !=on
# RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

# Redirigir www -> no-www (preservando esquema; ajusta a tu preferencia)
RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
RewriteRule ^ https://%1%{REQUEST_URI} [R=301,L]

### 2) Bloqueo de archivos y carpetas sensibles
<FilesMatch "^\.">
  Require all denied
</FilesMatch>

<FilesMatch "^(config\.env|composer\.(json|lock))$">
  Require all denied
</FilesMatch>

RewriteRule ^(?:src|database|tests)(?:/.*)?$ - [F,L]

### 3) Cache de estáticos
<IfModule mod_expires.c>
  ExpiresActive On
  ExpiresByType text/css "access plus 30 days"
  ExpiresByType application/javascript "access plus 30 days"
  ExpiresByType application/json "access plus 1 hour"
  ExpiresByType image/svg+xml "access plus 30 days"
  ExpiresByType image/png "access plus 30 days"
  ExpiresByType image/jpeg "access plus 30 days"
  ExpiresByType image/gif "access plus 30 days"
  ExpiresByType image/webp "access plus 30 days"
  ExpiresByType font/woff2 "access plus 30 days"
</IfModule>

FileETag None
<IfModule mod_headers.c>
  Header unset ETag
</IfModule>

### 4) Compresión (Brotli si está, sino Gzip)
<IfModule mod_brotli.c>
  AddOutputFilterByType BROTLI_COMPRESS \
    text/plain text/html text/xml text/css \
    application/xml application/xhtml+xml application/rss+xml \
    application/javascript application/json
</IfModule>
<IfModule mod_deflate.c>
  AddOutputFilterByType DEFLATE \
    text/plain text/html text/xml text/css \
    application/xml application/xhtml+xml application/rss+xml \
    application/javascript application/json
</IfModule>

### 5) Security headers
<IfModule mod_headers.c>
  Header always set X-Content-Type-Options "nosniff"
  Header always set X-Frame-Options "SAMEORIGIN"
  Header always set Referrer-Policy "strict-origin-when-cross-origin"
  Header always set Cross-Origin-Opener-Policy "same-origin"
  Header always set Cross-Origin-Resource-Policy "same-origin"
  Header always set Permissions-Policy "geolocation=(), microphone=(), camera=()"
  Header always set X-XSS-Protection "1; mode=block"
</IfModule>

### 6) Ruteo de API → api/index.php
RewriteCond %{REQUEST_URI} ^/api [NC]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^api(?:/(.*))?$ api/index.php [QSA,L]

### 7) Ruteo del sitio público y exclusión de /features/
# Si el archivo o directorio existe, lo sirve directamente
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]

# ⚠️ Evitar que /features/ y /public/ se redirijan a sí mismos
RewriteCond %{REQUEST_URI} ^/features/ [NC]
RewriteRule ^ - [L]

RewriteCond %{REQUEST_URI} ^/public/ [NC]
RewriteRule ^ - [L]

# Enviar el resto al front controller principal
RewriteRule ^ index.php [QSA,L]

### 8) Páginas de error
ErrorDocument 404 /public/404.php
ErrorDocument 500 /public/500.php
